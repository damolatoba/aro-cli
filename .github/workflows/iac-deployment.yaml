name: Terraform CI/CD
on:
  workflow_dispatch:
    inputs:

jobs:
  deploy_to_test:
    environment: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.4.6

      - name: Install dependencies
        run: |
          pip install checkov

      - name: Set up GCP credentials
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.TF_SERVICE_ACCOUNT }}'

      - name: Authorize GCP service principal
        run: |
          gcloud auth configure-docker gcr.io
          gcloud config set project ninth-victor-389223 # Replace with your GCP project ID

      # - name: Set up GCP credentials
      #   uses: google-github-actions/setup-gcloud@v0.3.0
      #   with:
      #     version: 'latest'
      #     service_account_key: ${{ secrets.TF_SERVICE_ACCOUNT }}
      #     project_id: ninth-victor-389223 

      # - name: Authorize GCP service principal
      #   run: |
      #     gcloud auth activate-service-account --key-file=${{ secrets.TF_SERVICE_ACCOUNT }}
      #     gcloud config set project ninth-victor-389223

      - name: Validate Terraform syntax
        run: |
          terraform init
          terraform validate

      - name: Create Terraform plan
        id: plan
        run: |
          terraform init
          terraform plan -out=tfplan
          echo "::set-output name=plan_path::$(pwd)/tfplan"

      - name: Run Terraform static analysis
        run: |
          # terraform show -json ${{ steps.plan.outputs.plan_path }}  > tf.json
          ls -a
          # checkov -d ./
          checkov -f ${GITHUB_WORKSPACE}/${{ steps.plan.outputs.plan_path }}


      # - name: Deploy infrastructure for integration testing
      #   run: |
      #     # terraform init
      #     terraform apply -auto-approve